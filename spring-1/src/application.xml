<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
<bean id="helloWorld" class="com.asguigu.spring.beans.HelloWorld">
<!-- 
配置bean
class :bean 全类名  通过放射方式配置bean 所以要求bean的类中必须要有无参的构造方法 
id 通过 来获取bean 并且 bean中的 id是唯一的 
 -->
<!-- set注入 -->
<property name="name" value="spring"></property>
</bean>

<bean id="helloWorld2" class="com.asguigu.spring.beans.HelloWorld">
<property name="name" value="spring"></property>
</bean>

<bean id="car" class="com.asguigu.spring.beans.Car">
<!-- 可以index属性定位参数顺序  -->
<constructor-arg value="Audi"></constructor-arg>
<!--如果value中包含特殊字符，用<![CDATA[]]>，进行处理  -->
<constructor-arg >
<!-- value子节点进行配置 -->
<value><![CDATA[Shanghai^^^^^]]> </value>
</constructor-arg>
<constructor-arg value="300000"></constructor-arg>
</bean>

<bean id="car2" class="com.asguigu.spring.beans.Car">
<!-- 构造注入可以根据参数的类型 引用类型的在java.lang下 指定位置 ，基本类型不用 直接写就行
  -->
<constructor-arg value="Baoma" type="java.lang.String"></constructor-arg>
<constructor-arg value="Shanghai" type="java.lang.String"></constructor-arg>
<constructor-arg value="200.00" type="double"></constructor-arg>
<!--<constructor-arg >为参数赋空值
<null/>
</constructor-arg>  -->
</bean>

<bean id="person" class="com.asguigu.spring.beans.Person">
<property name="name" value="Tom"></property>
<property name="age" value="24"></property>
<property name="cars">
<ref bean="car"></ref>
</property>
</bean>
<!--使用list节点为list集合赋值 内部bean不能被引用  -->
<bean id="person2" class="com.asguigu.spring.beans.Person">
<property name="name" value="Mike"></property>
<property name="age" value="22"></property>
<property name="cars">
<list>
<ref bean="car"></ref>
<ref bean="car2"></ref>
</list>
</property>
</bean>
<!-- 使用map节点及其子节点配置map集合 -->
<bean id="newPerson" class="com.asguigu.spring.beans.collections.NewPerson">
<property name="name" value="Rose"></property>
<property name="age" value="24"></property>
<property name="cars">
<map>
<entry key="AA" value-ref="car"></entry>
<entry key="BB" value-ref="car2"></entry>
</map>
</property>
</bean>
<!-- 使用properties节点及其子节点对properties属性进行赋值 -->
<bean id="dataSource" class="com.asguigu.spring.beans.collections.DataSource">
<property name="properties">
<props>
<prop key="user">root</prop>
<prop key="password">123456</prop>
<prop key="jdbcUrl">jdbc:mysql://test</prop>
<prop key="r=driverClass">com.mysql.jdbc.Driver</prop>
</props>
</property>
</bean>

<!-- 配置单例的集合bean给多个bean进行引用  要引入命名空间 注意list 和map的赋值差别 entry -->
<util:map id="cars">
<entry key="aa" value-ref="car"></entry>
<entry key="bb" value-ref="car2"></entry>
</util:map>

<bean id="newPerson4" class="com.asguigu.spring.beans.collections.NewPerson">
<property name="name" value="Jack"></property>
<property name="age" value="22"></property>
<property name="cars" ref="cars"></property>
</bean>

<!-- ioc 可以帮我们自动装配 -->
</beans>
